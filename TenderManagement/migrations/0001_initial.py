# Generated by Django 4.2.6 on 2025-07-30 18:10

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('LeadManagement', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('ProjectManagement', '0001_initial'),
        ('DynamicDjango', '0002_company_clogo'),
        ('Masters', '0006_item_mrp_item_origin_type_item_rate_item_tax'),
    ]

    operations = [
        migrations.CreateModel(
            name='BudgetEnquiry',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('erp_id', models.IntegerField(blank=True, default=None, null=True)),
                ('erp_code', models.CharField(blank=True, max_length=30, null=True)),
                ('created_by_type', models.CharField(blank=True, db_index=True, max_length=100, null=True)),
                ('created_by_identifier', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_by_type', models.CharField(blank=True, db_index=True, max_length=100, null=True)),
                ('modified_by_identifier', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('modified_on', models.DateTimeField(auto_now=True, null=True)),
                ('is_deleted', models.BooleanField(blank=True, default=False, null=True)),
                ('code', models.CharField(max_length=30, unique=True)),
                ('authorized_level', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('authorized_by_type', models.CharField(blank=True, max_length=30, null=True)),
                ('authorized_by_identifier', models.CharField(blank=True, max_length=255, null=True)),
                ('authorized_on', models.DateTimeField(auto_now_add=True, null=True)),
                ('current_authorized_level', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('current_authorized_status', models.SmallIntegerField(blank=True, choices=[(1, 'Pending'), (2, 'Approved'), (3, 'Rejected'), (4, 'Skipped')], default=1, null=True)),
                ('current_authorized_by_type', models.CharField(blank=True, max_length=30, null=True)),
                ('current_authorized_by_identifier', models.CharField(blank=True, max_length=255, null=True)),
                ('current_authorized_on', models.DateTimeField(auto_now_add=True, null=True)),
                ('authorized_status', models.SmallIntegerField(blank=True, choices=[(1, 'Pending'), (2, 'Approved'), (3, 'Rejected'), (4, 'Skipped')], default=1, null=True)),
                ('name', models.CharField(blank=True, max_length=300, null=True)),
                ('assigned_on', models.DateTimeField(blank=True, null=True)),
                ('is_lead_required', models.BooleanField(blank=True, default=False, null=True)),
                ('tender_no', models.CharField(blank=True, db_index=True, max_length=20, null=True)),
                ('tender_type', models.SmallIntegerField(blank=True, choices=[(1, 'OpenTender'), (2, 'LimitedTender'), (3, 'SBC')], null=True)),
                ('screen_type', models.SmallIntegerField(blank=True, choices=[(1, 'Tender'), (2, 'BudgetEnquiry'), (3, 'PlazoTender')], null=True)),
                ('product_type', models.SmallIntegerField(blank=True, choices=[(1, 'Supply'), (2, 'Service'), (3, 'Both')], null=True)),
                ('status', models.SmallIntegerField(blank=True, choices=[(1, 'Pending'), (2, 'Approved'), (3, 'Rejected'), (4, 'Cancelled'), (5, 'Converted To Project')], default=1, null=True)),
                ('department_name', models.CharField(blank=True, max_length=180, null=True)),
                ('tender_datetime', models.DateTimeField(blank=True, null=True)),
                ('tender_extension_datetime', models.DateTimeField(blank=True, null=True)),
                ('pre_bid_place', models.CharField(blank=True, max_length=180, null=True)),
                ('pre_bid_meet_address', models.CharField(blank=True, max_length=180, null=True)),
                ('tender_open_datetime', models.DateTimeField(blank=True, null=True)),
                ('pre_bid_date', models.DateField(blank=True, null=True)),
                ('ministry', models.CharField(blank=True, max_length=180, null=True)),
                ('annual_turnover', models.TextField(blank=True, default='', null=True)),
                ('years_of_experiance', models.DecimalField(decimal_places=2, default=0, max_digits=30, null=True)),
                ('is_reverse_auction', models.BooleanField(blank=True, default=False, null=True)),
                ('is_mss_exemption', models.BooleanField(blank=True, default=False, null=True)),
                ('is_start_exemption', models.BooleanField(blank=True, default=False, null=True)),
                ('documents_required_seller', models.TextField(blank=True, default='', null=True)),
                ('time_allowed_clarification_days', models.TextField(blank=True, default='', null=True)),
                ('is_inspection', models.BooleanField(blank=True, default=False, null=True)),
                ('is_order_placing_authority', models.BooleanField(blank=True, default=False, null=True)),
                ('evaluation_method', models.CharField(blank=True, max_length=180, null=True)),
                ('description', models.TextField(blank=True, default='', null=True)),
            ],
            options={
                'db_table': 'TenderManagement_tender',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CostingSheet',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('erp_id', models.IntegerField(blank=True, default=None, null=True)),
                ('erp_code', models.CharField(blank=True, max_length=30, null=True)),
                ('created_by_type', models.CharField(blank=True, db_index=True, max_length=100, null=True)),
                ('created_by_identifier', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_by_type', models.CharField(blank=True, db_index=True, max_length=100, null=True)),
                ('modified_by_identifier', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('modified_on', models.DateTimeField(auto_now=True, null=True)),
                ('is_deleted', models.BooleanField(blank=True, default=False, null=True)),
                ('code', models.CharField(max_length=30, unique=True)),
                ('authorized_level', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('authorized_by_type', models.CharField(blank=True, max_length=30, null=True)),
                ('authorized_by_identifier', models.CharField(blank=True, max_length=255, null=True)),
                ('authorized_on', models.DateTimeField(auto_now_add=True, null=True)),
                ('current_authorized_level', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('current_authorized_status', models.SmallIntegerField(blank=True, choices=[(1, 'Pending'), (2, 'Approved'), (3, 'Rejected'), (4, 'Skipped')], default=1, null=True)),
                ('current_authorized_by_type', models.CharField(blank=True, max_length=30, null=True)),
                ('current_authorized_by_identifier', models.CharField(blank=True, max_length=255, null=True)),
                ('current_authorized_on', models.DateTimeField(auto_now_add=True, null=True)),
                ('authorized_status', models.SmallIntegerField(blank=True, choices=[(1, 'Pending'), (2, 'Approved'), (3, 'Rejected'), (4, 'Skipped')], default=1, null=True)),
                ('description', models.TextField(blank=True, default='', null=True)),
                ('project', models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='costingsheet', to='ProjectManagement.project')),
            ],
            options={
                'verbose_name': 'CostingSheet',
                'verbose_name_plural': 'CostingSheets',
            },
        ),
        migrations.CreateModel(
            name='PDFExtraction',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('erp_id', models.IntegerField(blank=True, default=None, null=True)),
                ('erp_code', models.CharField(blank=True, max_length=30, null=True)),
                ('created_by_type', models.CharField(blank=True, db_index=True, max_length=100, null=True)),
                ('created_by_identifier', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_by_type', models.CharField(blank=True, db_index=True, max_length=100, null=True)),
                ('modified_by_identifier', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('modified_on', models.DateTimeField(auto_now=True, null=True)),
                ('is_deleted', models.BooleanField(blank=True, default=False, null=True)),
                ('code', models.CharField(max_length=30, unique=True)),
                ('status', models.SmallIntegerField(blank=True, choices=[(1, 'Pending'), (2, 'Complete'), (3, 'Failed')], default=1, null=True)),
                ('file', models.FileField(blank=True, null=True, upload_to='pdfextraction/')),
                ('extarct_data', models.TextField(blank=True, default='', null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PlazoTender',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('erp_id', models.IntegerField(blank=True, default=None, null=True)),
                ('erp_code', models.CharField(blank=True, max_length=30, null=True)),
                ('created_by_type', models.CharField(blank=True, db_index=True, max_length=100, null=True)),
                ('created_by_identifier', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_by_type', models.CharField(blank=True, db_index=True, max_length=100, null=True)),
                ('modified_by_identifier', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('modified_on', models.DateTimeField(auto_now=True, null=True)),
                ('is_deleted', models.BooleanField(blank=True, default=False, null=True)),
                ('code', models.CharField(max_length=30, unique=True)),
                ('authorized_level', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('authorized_by_type', models.CharField(blank=True, max_length=30, null=True)),
                ('authorized_by_identifier', models.CharField(blank=True, max_length=255, null=True)),
                ('authorized_on', models.DateTimeField(auto_now_add=True, null=True)),
                ('current_authorized_level', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('current_authorized_status', models.SmallIntegerField(blank=True, choices=[(1, 'Pending'), (2, 'Approved'), (3, 'Rejected'), (4, 'Skipped')], default=1, null=True)),
                ('current_authorized_by_type', models.CharField(blank=True, max_length=30, null=True)),
                ('current_authorized_by_identifier', models.CharField(blank=True, max_length=255, null=True)),
                ('current_authorized_on', models.DateTimeField(auto_now_add=True, null=True)),
                ('authorized_status', models.SmallIntegerField(blank=True, choices=[(1, 'Pending'), (2, 'Approved'), (3, 'Rejected'), (4, 'Skipped')], default=1, null=True)),
                ('name', models.CharField(blank=True, max_length=300, null=True)),
                ('tender_no', models.CharField(blank=True, db_index=True, max_length=20, null=True)),
                ('assigned_on', models.DateTimeField(blank=True, null=True)),
                ('status', models.SmallIntegerField(blank=True, choices=[(1, 'Pending'), (2, 'Approved'), (3, 'Rejected'), (4, 'Cancelled'), (5, 'Converted To Project')], default=1, null=True)),
                ('description', models.TextField(blank=True, default='', null=True)),
                ('customer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='plazo_tenders', to='Masters.account')),
                ('project', models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='plazo_tenders', to='ProjectManagement.project')),
            ],
            options={
                'verbose_name': 'PlazoTender',
                'verbose_name_plural': 'PlazoTenders',
            },
        ),
        migrations.CreateModel(
            name='Tender',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('erp_id', models.IntegerField(blank=True, default=None, null=True)),
                ('erp_code', models.CharField(blank=True, max_length=30, null=True)),
                ('created_by_type', models.CharField(blank=True, db_index=True, max_length=100, null=True)),
                ('created_by_identifier', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_by_type', models.CharField(blank=True, db_index=True, max_length=100, null=True)),
                ('modified_by_identifier', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('modified_on', models.DateTimeField(auto_now=True, null=True)),
                ('is_deleted', models.BooleanField(blank=True, default=False, null=True)),
                ('code', models.CharField(max_length=30, unique=True)),
                ('authorized_level', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('authorized_by_type', models.CharField(blank=True, max_length=30, null=True)),
                ('authorized_by_identifier', models.CharField(blank=True, max_length=255, null=True)),
                ('authorized_on', models.DateTimeField(auto_now_add=True, null=True)),
                ('current_authorized_level', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('current_authorized_status', models.SmallIntegerField(blank=True, choices=[(1, 'Pending'), (2, 'Approved'), (3, 'Rejected'), (4, 'Skipped')], default=1, null=True)),
                ('current_authorized_by_type', models.CharField(blank=True, max_length=30, null=True)),
                ('current_authorized_by_identifier', models.CharField(blank=True, max_length=255, null=True)),
                ('current_authorized_on', models.DateTimeField(auto_now_add=True, null=True)),
                ('authorized_status', models.SmallIntegerField(blank=True, choices=[(1, 'Pending'), (2, 'Approved'), (3, 'Rejected'), (4, 'Skipped')], default=1, null=True)),
                ('name', models.CharField(blank=True, max_length=300, null=True)),
                ('assigned_on', models.DateTimeField(blank=True, null=True)),
                ('is_lead_required', models.BooleanField(blank=True, default=False, null=True)),
                ('tender_no', models.CharField(blank=True, db_index=True, max_length=20, null=True)),
                ('tender_type', models.SmallIntegerField(blank=True, choices=[(1, 'OpenTender'), (2, 'LimitedTender'), (3, 'SBC')], null=True)),
                ('screen_type', models.SmallIntegerField(blank=True, choices=[(1, 'Tender'), (2, 'BudgetEnquiry'), (3, 'PlazoTender')], null=True)),
                ('product_type', models.SmallIntegerField(blank=True, choices=[(1, 'Supply'), (2, 'Service'), (3, 'Both')], null=True)),
                ('status', models.SmallIntegerField(blank=True, choices=[(1, 'Pending'), (2, 'Approved'), (3, 'Rejected'), (4, 'Cancelled'), (5, 'Converted To Project')], default=1, null=True)),
                ('department_name', models.CharField(blank=True, max_length=180, null=True)),
                ('tender_datetime', models.DateTimeField(blank=True, null=True)),
                ('tender_extension_datetime', models.DateTimeField(blank=True, null=True)),
                ('pre_bid_place', models.CharField(blank=True, max_length=180, null=True)),
                ('pre_bid_meet_address', models.CharField(blank=True, max_length=180, null=True)),
                ('tender_open_datetime', models.DateTimeField(blank=True, null=True)),
                ('pre_bid_date', models.DateField(blank=True, null=True)),
                ('ministry', models.CharField(blank=True, max_length=180, null=True)),
                ('annual_turnover', models.TextField(blank=True, default='', null=True)),
                ('years_of_experiance', models.DecimalField(decimal_places=2, default=0, max_digits=30, null=True)),
                ('is_reverse_auction', models.BooleanField(blank=True, default=False, null=True)),
                ('is_mss_exemption', models.BooleanField(blank=True, default=False, null=True)),
                ('is_start_exemption', models.BooleanField(blank=True, default=False, null=True)),
                ('documents_required_seller', models.TextField(blank=True, default='', null=True)),
                ('time_allowed_clarification_days', models.TextField(blank=True, default='', null=True)),
                ('is_inspection', models.BooleanField(blank=True, default=False, null=True)),
                ('is_order_placing_authority', models.BooleanField(blank=True, default=False, null=True)),
                ('evaluation_method', models.CharField(blank=True, max_length=180, null=True)),
                ('description', models.TextField(blank=True, default='', null=True)),
                ('company', models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='tender', to='DynamicDjango.company')),
                ('customer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='tender', to='Masters.account')),
                ('lead', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='tender', to='LeadManagement.lead')),
                ('location', models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='tender', to='DynamicDjango.location')),
                ('order_placing_authority', models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='tenders_op', to='Masters.account')),
                ('project', models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='tender_project', to='ProjectManagement.project')),
                ('sourceportal', models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='tender', to='Masters.sourceportal')),
                ('tender_stage', models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='tender', to='Masters.stage')),
            ],
            options={
                'verbose_name': 'Tender',
                'verbose_name_plural': 'Tenders',
                'permissions': (('can_assign', 'Can Assign Tender'), ('can_view_cst_overview', 'Can View CST Overview'), ('can_view_be_cst_overview', 'Can View Budget Enquiry CST Overview'), ('view_budget_enquiry', 'Can View Budget Enquiry'), ('add_budget_enquiry', 'Can Add Budget Enquiry'), ('change_budget_enquiry', 'Can Change Budget Enquiry'), ('delete_budget_enquiry', 'Can Delete Budget Enquiry')),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TenderItem',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('erp_id', models.IntegerField(blank=True, default=None, null=True)),
                ('erp_code', models.CharField(blank=True, max_length=30, null=True)),
                ('created_by_type', models.CharField(blank=True, db_index=True, max_length=100, null=True)),
                ('created_by_identifier', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_by_type', models.CharField(blank=True, db_index=True, max_length=100, null=True)),
                ('modified_by_identifier', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('modified_on', models.DateTimeField(auto_now=True, null=True)),
                ('is_deleted', models.BooleanField(blank=True, default=False, null=True)),
                ('code', models.CharField(max_length=30, unique=True)),
                ('authorized_level', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('authorized_by_type', models.CharField(blank=True, max_length=30, null=True)),
                ('authorized_by_identifier', models.CharField(blank=True, max_length=255, null=True)),
                ('authorized_on', models.DateTimeField(auto_now_add=True, null=True)),
                ('current_authorized_level', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('current_authorized_status', models.SmallIntegerField(blank=True, choices=[(1, 'Pending'), (2, 'Approved'), (3, 'Rejected'), (4, 'Skipped')], default=1, null=True)),
                ('current_authorized_by_type', models.CharField(blank=True, max_length=30, null=True)),
                ('current_authorized_by_identifier', models.CharField(blank=True, max_length=255, null=True)),
                ('current_authorized_on', models.DateTimeField(auto_now_add=True, null=True)),
                ('authorized_status', models.SmallIntegerField(blank=True, choices=[(1, 'Pending'), (2, 'Approved'), (3, 'Rejected'), (4, 'Skipped')], default=1, null=True)),
                ('is_rfq_required', models.BooleanField(blank=True, default=False, null=True)),
                ('item_specifications', models.TextField(blank=True, default='', null=True)),
                ('quantity', models.DecimalField(decimal_places=2, default=0, max_digits=18, null=True)),
                ('tender', models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='tender_items', to='TenderManagement.tender')),
                ('tenderitemmaster', models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='tender_items', to='Masters.item')),
                ('unit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='tender_items', to='Masters.unit')),
            ],
            options={
                'verbose_name': 'TenderItem',
                'verbose_name_plural': 'TenderItems',
                'permissions': (('view_budget_enquiry_item', 'Can View Budget Enquiry Item'), ('add_budget_enquiry_item', 'Can Add Budget Enquiry Item'), ('change_budget_enquiry_item', 'Can Change Budget Enquiry Item'), ('delete_budget_enquiry_item', 'Can Delete Budget Enquiry Item')),
            },
        ),
        migrations.CreateModel(
            name='TenderItemMaster',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('erp_id', models.IntegerField(blank=True, default=None, null=True)),
                ('erp_code', models.CharField(blank=True, max_length=30, null=True)),
                ('created_by_type', models.CharField(blank=True, db_index=True, max_length=100, null=True)),
                ('created_by_identifier', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_by_type', models.CharField(blank=True, db_index=True, max_length=100, null=True)),
                ('modified_by_identifier', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('modified_on', models.DateTimeField(auto_now=True, null=True)),
                ('is_deleted', models.BooleanField(blank=True, default=False, null=True)),
                ('code', models.CharField(max_length=30, unique=True)),
                ('name', models.TextField(blank=True, default='', null=True, unique=True)),
            ],
            options={
                'verbose_name': 'TenderItemMaster',
                'verbose_name_plural': 'TenderItemMasters',
            },
        ),
        migrations.CreateModel(
            name='TenderItemMasterItem',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('erp_id', models.IntegerField(blank=True, default=None, null=True)),
                ('erp_code', models.CharField(blank=True, max_length=30, null=True)),
                ('created_by_type', models.CharField(blank=True, db_index=True, max_length=100, null=True)),
                ('created_by_identifier', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_by_type', models.CharField(blank=True, db_index=True, max_length=100, null=True)),
                ('modified_by_identifier', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('modified_on', models.DateTimeField(auto_now=True, null=True)),
                ('is_deleted', models.BooleanField(blank=True, default=False, null=True)),
                ('code', models.CharField(max_length=30, unique=True)),
                ('quantity', models.DecimalField(decimal_places=2, default=0, max_digits=18, null=True)),
                ('item', models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='tendermasteritems', to='Masters.item')),
                ('tenderitemmaster', models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='tendermasteritems', to='TenderManagement.tenderitemmaster')),
            ],
            options={
                'verbose_name': 'TenderItemMasterItem',
                'verbose_name_plural': 'TenderItemMasterItems',
            },
        ),
        migrations.CreateModel(
            name='TenderItemAssign',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('erp_id', models.IntegerField(blank=True, default=None, null=True)),
                ('erp_code', models.CharField(blank=True, max_length=30, null=True)),
                ('created_by_type', models.CharField(blank=True, db_index=True, max_length=100, null=True)),
                ('created_by_identifier', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_by_type', models.CharField(blank=True, db_index=True, max_length=100, null=True)),
                ('modified_by_identifier', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('modified_on', models.DateTimeField(auto_now=True, null=True)),
                ('is_deleted', models.BooleanField(blank=True, default=False, null=True)),
                ('code', models.CharField(max_length=30, unique=True)),
                ('authorized_level', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('authorized_by_type', models.CharField(blank=True, max_length=30, null=True)),
                ('authorized_by_identifier', models.CharField(blank=True, max_length=255, null=True)),
                ('authorized_on', models.DateTimeField(auto_now_add=True, null=True)),
                ('current_authorized_level', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('current_authorized_status', models.SmallIntegerField(blank=True, choices=[(1, 'Pending'), (2, 'Approved'), (3, 'Rejected'), (4, 'Skipped')], default=1, null=True)),
                ('current_authorized_by_type', models.CharField(blank=True, max_length=30, null=True)),
                ('current_authorized_by_identifier', models.CharField(blank=True, max_length=255, null=True)),
                ('current_authorized_on', models.DateTimeField(auto_now_add=True, null=True)),
                ('authorized_status', models.SmallIntegerField(blank=True, choices=[(1, 'Pending'), (2, 'Approved'), (3, 'Rejected'), (4, 'Skipped')], default=1, null=True)),
                ('tender', models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='tender_items_assign', to='TenderManagement.tender')),
                ('tender_item', models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='tender_items_assign', to='TenderManagement.tenderitem')),
                ('tenderitemmaster', models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='tender_items_assign', to='Masters.item')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='tender_items_assign', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'TenderItemAssign',
                'verbose_name_plural': 'TenderItemAssignies',
            },
        ),
        migrations.CreateModel(
            name='TenderDocuments',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('erp_id', models.IntegerField(blank=True, default=None, null=True)),
                ('erp_code', models.CharField(blank=True, max_length=30, null=True)),
                ('created_by_type', models.CharField(blank=True, db_index=True, max_length=100, null=True)),
                ('created_by_identifier', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_by_type', models.CharField(blank=True, db_index=True, max_length=100, null=True)),
                ('modified_by_identifier', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('modified_on', models.DateTimeField(auto_now=True, null=True)),
                ('is_deleted', models.BooleanField(blank=True, default=False, null=True)),
                ('code', models.CharField(max_length=30, unique=True)),
                ('document_name', models.CharField(blank=True, max_length=300, null=True)),
                ('is_submitted', models.BooleanField(blank=True, default=False, null=True)),
                ('type', models.SmallIntegerField(blank=True, choices=[(1, 'Common'), (2, 'Individual')], default=1, null=True)),
                ('file', models.FileField(blank=True, null=True, upload_to='tedner_documents/')),
                ('document', models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='tedner_documents', to='Masters.document')),
                ('tender', models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='tedner_documents', to='TenderManagement.tender')),
            ],
            options={
                'verbose_name': 'TenderDocuments',
                'verbose_name_plural': 'TenderDocuments',
                'permissions': (('view_be_documents', 'Can View BE Documents'), ('add_be_documents', 'Can Add BE Documents'), ('change_be_documents', 'Can Change BE Documents'), ('delete_be_documents', 'Can Delete BE Documents')),
            },
        ),
        migrations.CreateModel(
            name='TenderComments',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('erp_id', models.IntegerField(blank=True, default=None, null=True)),
                ('erp_code', models.CharField(blank=True, max_length=30, null=True)),
                ('created_by_type', models.CharField(blank=True, db_index=True, max_length=100, null=True)),
                ('created_by_identifier', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_by_type', models.CharField(blank=True, db_index=True, max_length=100, null=True)),
                ('modified_by_identifier', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('modified_on', models.DateTimeField(auto_now=True, null=True)),
                ('is_deleted', models.BooleanField(blank=True, default=False, null=True)),
                ('code', models.CharField(max_length=30, unique=True)),
                ('comment', models.CharField(blank=True, max_length=300, null=True)),
                ('tender', models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='tedner_comments', to='TenderManagement.tender')),
            ],
            options={
                'verbose_name': 'Comment',
                'verbose_name_plural': 'Comments',
                'permissions': (('view_be_comments', 'Can View BE Comments'), ('add_be_comments', 'Can Add BE Comments'), ('change_be_comments', 'Can Change BE Comments'), ('delete_be_comments', 'Can Delete BE Comments')),
            },
        ),
        migrations.CreateModel(
            name='TenderAttachments',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('erp_id', models.IntegerField(blank=True, default=None, null=True)),
                ('erp_code', models.CharField(blank=True, max_length=30, null=True)),
                ('created_by_type', models.CharField(blank=True, db_index=True, max_length=100, null=True)),
                ('created_by_identifier', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_by_type', models.CharField(blank=True, db_index=True, max_length=100, null=True)),
                ('modified_by_identifier', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('modified_on', models.DateTimeField(auto_now=True, null=True)),
                ('is_deleted', models.BooleanField(blank=True, default=False, null=True)),
                ('code', models.CharField(max_length=30, unique=True)),
                ('file', models.FileField(blank=True, null=True, upload_to='')),
                ('tender', models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='tedner_attachments', to='TenderManagement.tender')),
            ],
            options={
                'verbose_name': 'TenderAttachment',
                'verbose_name_plural': 'TenderAttachments',
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('erp_id', models.IntegerField(blank=True, default=None, null=True)),
                ('erp_code', models.CharField(blank=True, max_length=30, null=True)),
                ('created_by_type', models.CharField(blank=True, db_index=True, max_length=100, null=True)),
                ('created_by_identifier', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_by_type', models.CharField(blank=True, db_index=True, max_length=100, null=True)),
                ('modified_by_identifier', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('modified_on', models.DateTimeField(auto_now=True, null=True)),
                ('is_deleted', models.BooleanField(blank=True, default=False, null=True)),
                ('code', models.CharField(max_length=30, unique=True)),
                ('days', models.IntegerField(blank=True, default=1, null=True)),
                ('qty', models.DecimalField(decimal_places=3, default=0, max_digits=18, null=True)),
                ('price', models.DecimalField(decimal_places=2, default=0, max_digits=18, null=True)),
                ('total_price', models.DecimalField(decimal_places=2, default=0, max_digits=18, null=True)),
                ('duration', models.IntegerField(blank=True, default=1, null=True)),
                ('margin_percent', models.DecimalField(decimal_places=2, default=0, max_digits=18, null=True)),
                ('margin_amount', models.DecimalField(decimal_places=2, default=0, max_digits=18, null=True)),
                ('overtime_amount', models.DecimalField(decimal_places=2, default=0, max_digits=18, null=True)),
                ('remarks', models.TextField(blank=True, default='', null=True)),
                ('costingsheet', models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='services', to='TenderManagement.costingsheet')),
                ('item', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='services', to='Masters.item')),
                ('tender', models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='services', to='TenderManagement.tender')),
            ],
            options={
                'permissions': (('view_be_service', 'Can View BE Service'), ('add_be_service', 'Can Add BE Service'), ('change_be_service', 'Can Change BE Service'), ('delete_be_service', 'Can Delete BE Service')),
            },
        ),
        migrations.CreateModel(
            name='ReverseAuction',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('erp_id', models.IntegerField(blank=True, default=None, null=True)),
                ('erp_code', models.CharField(blank=True, max_length=30, null=True)),
                ('created_by_type', models.CharField(blank=True, db_index=True, max_length=100, null=True)),
                ('created_by_identifier', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_by_type', models.CharField(blank=True, db_index=True, max_length=100, null=True)),
                ('modified_by_identifier', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('modified_on', models.DateTimeField(auto_now=True, null=True)),
                ('is_deleted', models.BooleanField(blank=True, default=False, null=True)),
                ('code', models.CharField(max_length=30, unique=True)),
                ('landing_cost', models.DecimalField(decimal_places=2, default=0, max_digits=18, null=True)),
                ('discount_landing_cost', models.DecimalField(decimal_places=2, default=0, max_digits=18, null=True)),
                ('landing_cost_margin', models.DecimalField(decimal_places=2, default=0, max_digits=18, null=True)),
                ('landing_cost_margin_amount', models.DecimalField(decimal_places=2, default=0, max_digits=18, null=True)),
                ('landing_cost_total', models.DecimalField(decimal_places=2, default=0, max_digits=18, null=True)),
                ('landing_cost_gst', models.DecimalField(decimal_places=2, default=0, max_digits=18, null=True)),
                ('landing_cost_gst_amount', models.DecimalField(decimal_places=2, default=0, max_digits=18, null=True)),
                ('total', models.DecimalField(decimal_places=2, default=0, max_digits=18, null=True)),
                ('l1_price', models.DecimalField(decimal_places=2, default=0, max_digits=18, null=True)),
                ('diff_amount', models.DecimalField(decimal_places=2, default=0, max_digits=18, null=True)),
                ('remarks', models.TextField(blank=True, default='', null=True)),
                ('tender', models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='reverse_auction', to='TenderManagement.tender')),
                ('tender_item', models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='reverse_auction', to='TenderManagement.tenderitem')),
                ('tender_item_master', models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='reverse_auction', to='Masters.item')),
            ],
            options={
                'verbose_name': 'ReverseAuction',
                'verbose_name_plural': 'ReverseAuctions',
                'permissions': (('can_l1_price_add', 'Can Add L1price'), ('view_be_reverseauction', 'Can View BE ReverseAuction'), ('add_be_reverseauction', 'Can Add BE ReverseAuction'), ('change_be_reverseauction', 'Can Change BE ReverseAuction'), ('delete_be_reverseauction', 'Can Delete BE ReverseAuction')),
            },
        ),
        migrations.CreateModel(
            name='RawMaterial',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('erp_id', models.IntegerField(blank=True, default=None, null=True)),
                ('erp_code', models.CharField(blank=True, max_length=30, null=True)),
                ('created_by_type', models.CharField(blank=True, db_index=True, max_length=100, null=True)),
                ('created_by_identifier', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_by_type', models.CharField(blank=True, db_index=True, max_length=100, null=True)),
                ('modified_by_identifier', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('modified_on', models.DateTimeField(auto_now=True, null=True)),
                ('is_deleted', models.BooleanField(blank=True, default=False, null=True)),
                ('code', models.CharField(max_length=30, unique=True)),
                ('type', models.SmallIntegerField(blank=True, choices=[(1, 'Rawitem'), (2, 'Cqitem')], default=1, null=True)),
                ('qty', models.DecimalField(decimal_places=3, default=0, max_digits=18, null=True)),
                ('price', models.DecimalField(decimal_places=2, default=0, max_digits=18, null=True)),
                ('total_price', models.DecimalField(decimal_places=2, default=0, max_digits=18, null=True)),
                ('margin_percent', models.DecimalField(decimal_places=2, default=0, max_digits=18, null=True)),
                ('margin_amount', models.DecimalField(decimal_places=2, default=0, max_digits=18, null=True)),
                ('remarks', models.TextField(blank=True, default='', null=True)),
                ('costingsheet', models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='rawmaterials', to='TenderManagement.costingsheet')),
                ('item', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='rawmaterials', to='Masters.item')),
                ('tender', models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='rawmaterials', to='TenderManagement.tender')),
                ('vendor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='rawmaterials', to='Masters.account')),
            ],
            options={
                'permissions': (('view_be_rawmaterial', 'Can View BE RawMaterials'), ('add_be_rawmaterial', 'Can Add BE RawMaterials'), ('change_be_rawmaterial', 'Can Change BE RawMaterials'), ('delete_be_rawmaterial', 'Can Delete BE RawMaterials')),
            },
        ),
        migrations.CreateModel(
            name='PlazoTenderItem',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('erp_id', models.IntegerField(blank=True, default=None, null=True)),
                ('erp_code', models.CharField(blank=True, max_length=30, null=True)),
                ('created_by_type', models.CharField(blank=True, db_index=True, max_length=100, null=True)),
                ('created_by_identifier', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_by_type', models.CharField(blank=True, db_index=True, max_length=100, null=True)),
                ('modified_by_identifier', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('modified_on', models.DateTimeField(auto_now=True, null=True)),
                ('is_deleted', models.BooleanField(blank=True, default=False, null=True)),
                ('code', models.CharField(max_length=30, unique=True)),
                ('authorized_level', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('authorized_by_type', models.CharField(blank=True, max_length=30, null=True)),
                ('authorized_by_identifier', models.CharField(blank=True, max_length=255, null=True)),
                ('authorized_on', models.DateTimeField(auto_now_add=True, null=True)),
                ('current_authorized_level', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('current_authorized_status', models.SmallIntegerField(blank=True, choices=[(1, 'Pending'), (2, 'Approved'), (3, 'Rejected'), (4, 'Skipped')], default=1, null=True)),
                ('current_authorized_by_type', models.CharField(blank=True, max_length=30, null=True)),
                ('current_authorized_by_identifier', models.CharField(blank=True, max_length=255, null=True)),
                ('current_authorized_on', models.DateTimeField(auto_now_add=True, null=True)),
                ('authorized_status', models.SmallIntegerField(blank=True, choices=[(1, 'Pending'), (2, 'Approved'), (3, 'Rejected'), (4, 'Skipped')], default=1, null=True)),
                ('quantity', models.DecimalField(decimal_places=2, default=0, max_digits=18, null=True)),
                ('item', models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='plazo_tender_items', to='Masters.item')),
                ('plazo_tender', models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='plazo_tender_items', to='TenderManagement.plazotender')),
            ],
            options={
                'verbose_name': 'PlazoTenderItem',
                'verbose_name_plural': 'PlazoTenderItems',
            },
        ),
        migrations.CreateModel(
            name='PlazoTenderAttachment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('erp_id', models.IntegerField(blank=True, default=None, null=True)),
                ('erp_code', models.CharField(blank=True, max_length=30, null=True)),
                ('created_by_type', models.CharField(blank=True, db_index=True, max_length=100, null=True)),
                ('created_by_identifier', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_by_type', models.CharField(blank=True, db_index=True, max_length=100, null=True)),
                ('modified_by_identifier', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('modified_on', models.DateTimeField(auto_now=True, null=True)),
                ('is_deleted', models.BooleanField(blank=True, default=False, null=True)),
                ('code', models.CharField(max_length=30, unique=True)),
                ('file', models.FileField(blank=True, null=True, upload_to='')),
                ('plazo_tender', models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='plazo_tender_attachments', to='TenderManagement.plazotender')),
            ],
            options={
                'verbose_name': 'PlazoTenderAttachment',
                'verbose_name_plural': 'PlazoTenderAttachments',
            },
        ),
        migrations.CreateModel(
            name='OtherCharges',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('erp_id', models.IntegerField(blank=True, default=None, null=True)),
                ('erp_code', models.CharField(blank=True, max_length=30, null=True)),
                ('created_by_type', models.CharField(blank=True, db_index=True, max_length=100, null=True)),
                ('created_by_identifier', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_by_type', models.CharField(blank=True, db_index=True, max_length=100, null=True)),
                ('modified_by_identifier', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('modified_on', models.DateTimeField(auto_now=True, null=True)),
                ('is_deleted', models.BooleanField(blank=True, default=False, null=True)),
                ('code', models.CharField(max_length=30, unique=True)),
                ('name', models.CharField(max_length=180, unique=True)),
                ('price', models.DecimalField(decimal_places=2, default=0, max_digits=18, null=True)),
                ('margin_percent', models.DecimalField(decimal_places=2, default=0, max_digits=18, null=True)),
                ('margin_amount', models.DecimalField(decimal_places=2, default=0, max_digits=18, null=True)),
                ('total_price', models.DecimalField(decimal_places=2, default=0, max_digits=18, null=True)),
                ('remarks', models.TextField(blank=True, default='', null=True)),
                ('costingsheet', models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='othercharges', to='TenderManagement.costingsheet')),
                ('miscellaneoustype', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='rawmaterials', to='Masters.miscellaneoustypes')),
                ('tender', models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='othercharges', to='TenderManagement.tender')),
            ],
            options={
                'permissions': (('view_be_othercharges', 'Can View BE OtherCharges'), ('add_be_othercharges', 'Can Add BE OtherCharges'), ('change_be_othercharges', 'Can Change BE OtherCharges'), ('delete_be_othercharges', 'Can Delete BE OtherCharges')),
            },
        ),
        migrations.AddField(
            model_name='costingsheet',
            name='tender',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='costingsheet', to='TenderManagement.tender'),
        ),
        migrations.CreateModel(
            name='Consumable',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('erp_id', models.IntegerField(blank=True, default=None, null=True)),
                ('erp_code', models.CharField(blank=True, max_length=30, null=True)),
                ('created_by_type', models.CharField(blank=True, db_index=True, max_length=100, null=True)),
                ('created_by_identifier', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_by_type', models.CharField(blank=True, db_index=True, max_length=100, null=True)),
                ('modified_by_identifier', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('modified_on', models.DateTimeField(auto_now=True, null=True)),
                ('is_deleted', models.BooleanField(blank=True, default=False, null=True)),
                ('code', models.CharField(max_length=30, unique=True)),
                ('qty', models.DecimalField(decimal_places=3, default=0, max_digits=18, null=True)),
                ('price', models.DecimalField(decimal_places=2, default=0, max_digits=18, null=True)),
                ('total_price', models.DecimalField(decimal_places=2, default=0, max_digits=18, null=True)),
                ('margin_percent', models.DecimalField(decimal_places=2, default=0, max_digits=18, null=True)),
                ('margin_amount', models.DecimalField(decimal_places=2, default=0, max_digits=18, null=True)),
                ('remarks', models.TextField(blank=True, default='', null=True)),
                ('costingsheet', models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='consumables', to='TenderManagement.costingsheet')),
                ('item', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='consumables', to='Masters.item')),
                ('tender', models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='consumables', to='TenderManagement.tender')),
            ],
            options={
                'permissions': (('view_be_consumable', 'Can View BE Consumable'), ('add_be_consumable', 'Can Add BE Consumable'), ('change_be_consumable', 'Can Change BE Consumable'), ('delete_be_consumable', 'Can Delete BE Consumable')),
            },
        ),
        migrations.CreateModel(
            name='CaseSheet',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('erp_id', models.IntegerField(blank=True, default=None, null=True)),
                ('erp_code', models.CharField(blank=True, max_length=30, null=True)),
                ('created_by_type', models.CharField(blank=True, db_index=True, max_length=100, null=True)),
                ('created_by_identifier', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_by_type', models.CharField(blank=True, db_index=True, max_length=100, null=True)),
                ('modified_by_identifier', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('modified_on', models.DateTimeField(auto_now=True, null=True)),
                ('is_deleted', models.BooleanField(blank=True, default=False, null=True)),
                ('code', models.CharField(max_length=30, unique=True)),
                ('authorized_level', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('authorized_by_type', models.CharField(blank=True, max_length=30, null=True)),
                ('authorized_by_identifier', models.CharField(blank=True, max_length=255, null=True)),
                ('authorized_on', models.DateTimeField(auto_now_add=True, null=True)),
                ('current_authorized_level', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('current_authorized_status', models.SmallIntegerField(blank=True, choices=[(1, 'Pending'), (2, 'Approved'), (3, 'Rejected'), (4, 'Skipped')], default=1, null=True)),
                ('current_authorized_by_type', models.CharField(blank=True, max_length=30, null=True)),
                ('current_authorized_by_identifier', models.CharField(blank=True, max_length=255, null=True)),
                ('current_authorized_on', models.DateTimeField(auto_now_add=True, null=True)),
                ('authorized_status', models.SmallIntegerField(blank=True, choices=[(1, 'Pending'), (2, 'Approved'), (3, 'Rejected'), (4, 'Skipped')], default=1, null=True)),
                ('pre_bid_date', models.DateTimeField(blank=True, null=True)),
                ('pre_bid_subject', models.TextField(blank=True, default='', null=True)),
                ('contact_person', models.CharField(blank=True, max_length=300, null=True)),
                ('phone', models.CharField(blank=True, db_index=True, max_length=15, null=True)),
                ('email', models.EmailField(blank=True, db_index=True, max_length=255, null=True)),
                ('last_tender_rate', models.DecimalField(decimal_places=2, default=0, max_digits=18, null=True)),
                ('last_tender_date', models.DateField(blank=True, null=True)),
                ('estimate_bid_price', models.DecimalField(decimal_places=2, default=0, max_digits=18, null=True)),
                ('oem_challenges', models.TextField(blank=True, default='', null=True)),
                ('documents_not_submitted_evaluation_matrix', models.TextField(blank=True, default='', null=True)),
                ('pendingdocumentsOEM', models.TextField(blank=True, default='', null=True)),
                ('is_reverse_auction', models.BooleanField(blank=True, default=False, null=True)),
                ('department_name', models.CharField(blank=True, max_length=300, null=True)),
                ('department_challenges', models.TextField(blank=True, default='', null=True)),
                ('is_extension_request', models.BooleanField(blank=True, default=False, null=True)),
                ('is_site_visit', models.BooleanField(blank=True, default=False, null=True)),
                ('costing_remarks', models.TextField(blank=True, default='', null=True)),
                ('remarks', models.TextField(blank=True, default='', null=True)),
                ('tender', models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='casesheet', to='TenderManagement.tender')),
            ],
            options={
                'verbose_name': 'Casesheet',
                'verbose_name_plural': 'Casesheets',
                'permissions': (('view_be_casesheet', 'Can View BE CaseSheet'), ('add_be_casesheet', 'Can Add BE CaseSheet'), ('change_be_casesheet', 'Can Change BE CaseSheet'), ('delete_be_casesheet', 'Can Delete BE CaseSheet')),
            },
        ),
        migrations.CreateModel(
            name='BidAmount',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('erp_id', models.IntegerField(blank=True, default=None, null=True)),
                ('erp_code', models.CharField(blank=True, max_length=30, null=True)),
                ('created_by_type', models.CharField(blank=True, db_index=True, max_length=100, null=True)),
                ('created_by_identifier', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_by_type', models.CharField(blank=True, db_index=True, max_length=100, null=True)),
                ('modified_by_identifier', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('modified_on', models.DateTimeField(auto_now=True, null=True)),
                ('is_deleted', models.BooleanField(blank=True, default=False, null=True)),
                ('code', models.CharField(max_length=30, unique=True)),
                ('amount', models.DecimalField(decimal_places=2, default=0, max_digits=18, null=True)),
                ('l1_price', models.DecimalField(decimal_places=2, default=0, max_digits=18, null=True)),
                ('tender', models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='bidamount', to='TenderManagement.tender')),
            ],
            options={
                'verbose_name': 'BidAmount',
                'verbose_name_plural': 'BidAmounts',
                'permissions': (('view_be_bidamounts', 'Can View BE BidAmounts'), ('add_be_bidamounts', 'Can Add BE BidAmounts'), ('change_be_bidamounts', 'Can Change BE BidAmounts'), ('delete_be_bidamounts', 'Can Delete BE BidAmounts')),
            },
        ),
    ]
